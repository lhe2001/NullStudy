<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="mapper.mystudy">
<!-- 		테이블이름 칼럼 맞는지 확인하기!!! -->

<!-- 메모리스트 -->
	<select id="Paging_list" resultType="memoDTO" parameterType="memoDTO">
      <![CDATA[
		 SELECT * from(
			 select rownum rnum, tmp.* from ( 
			 select * from mymemo
			 where userkey = #{userkey} 
			 order by m_memo_date desc) tmp
		)
		WHERE #{startIdx} <= rnum AND rnum <= #{endIdx}
		order by m_memo_date desc
      ]]>
	</select>
	
<!-- 메모 전체 목록 수-->
	<select id="Paging_allCnt" resultType="int">
      <![CDATA[
		select count(*) 
		from mymemo
		where userkey = #{userkey}
      ]]>
	</select>
	
<!-- 	메모 작성하기 -->
	<insert id="insertMemo" parameterType="memoDTO">
		<![CDATA[
		 insert into mymemo(m_memo_key, userkey, m_memo_title, m_memo_desc, m_memo_date )
		 values(seq_mymemo.nextval, #{userkey}, #{m_memo_title}, #{m_memo_desc}, sysdate)
		]]>      
	</insert>
	
<!-- 	메모 수정 전 해당dto조회 -->
	<select id="selectOneMemo" resultType="memoDTO" parameterType="int">
      <![CDATA[
         select * from mymemo	
         where m_memo_key = #{m_memo_key}	 	
      ]]>
	</select>
		
<!-- 	메모 수정하기 -->
	<update id="updateMemo" parameterType="memoDTO">
		<![CDATA[
		 update mymemo
		 set m_memo_title = #{m_memo_title}
		 	,m_memo_desc = #{m_memo_desc}
		 	where m_memo_key = #{m_memo_key}
		]]> 
	</update>

<!-- 	메모 삭제하기 -->
	<delete id="deleteMemo" parameterType="int">
		delete from mymemo
		where m_memo_key = #{m_memo_key}
	</delete>

<!-- 	일정 작성하기 -->
	<insert id="insertCal" parameterType="scheduleDTO">
		insert into myschedule(userkey, m_schedule_key, m_schedule_title, m_schedule_desc, m_schedule_date, m_schedule_write)
		values (#{userkey}, seq_schedule.nextval, #{m_schedule_title}, #{m_schedule_desc}, #{m_schedule_date}, sysdate)
	</insert>
	
	<select id="calBoardList" parameterType="scheduleDTO" resultType="scheduleDTO">
		select * from myschedule
		where userkey=#{userkey} and m_schedule_date = #{m_schedule_date}
		order by m_schedule_date
	</select>
	
	<select id="calDetail"  parameterType="int" resultType="scheduleDTO">
		select * from myschedule
		where m_schedule_key=#{m_schedule_key}
	</select>
	
	<update id="calUpdate" parameterType="scheduleDTO">
		update myschedule 
		set
			m_schedule_title=#{m_schedule_title}, m_schedule_desc=#{m_schedule_desc}, 
			m_schedule_date=#{m_schedule_date}
		where m_schedule_key=#{m_schedule_key}
	</update>
	
	<delete id="calMuldel" parameterType="Map">
		delete from myschedule where m_schedule_key in
		<foreach collection="m_schedule_keys" item="m_schedule_key" open="(" close=")" separator=",">
			#{m_schedule_key}
		</foreach>
	</delete>
	
	<select id="calCount" parameterType="scheduleDTO" resultType="int">
		select count(*) from myschedule
		where userkey=#{userkey} and m_schedule_date = #{m_schedule_date}
	</select>
	
	<select id="calViewList" parameterType="scheduleDTO" resultType="scheduleDTO">
		SELECT
			rn,
			userkey,
			m_schedule_key,
			m_schedule_title,
			m_schedule_desc,
			m_schedule_date,
			m_schedule_write
		FROM
			(
			SELECT
				ROW_NUMBER()  OVER(PARTITION BY substr(m_schedule_date, 1, 10) ORDER BY m_schedule_date) AS rn ,
				userkey,
				m_schedule_key,
				m_schedule_title,
				m_schedule_desc,
				m_schedule_date,
				m_schedule_write
			FROM
				myschedule
			WHERE
				userkey = #{userkey}
				AND substr(m_schedule_date, 1, 7) = substr( #{m_schedule_date}, 1, 7) ) 
		WHERE
			rn BETWEEN 1 AND 3
	</select>

<!-- 	투두리스트 -->
	<insert id="insertTodo" parameterType="todoDTO">
		INSERT INTO mytodo (M_TD_KEY, M_TD_DESC, M_TD_DATE, USERKEY)
		VALUES (seq_mytodo.nextval, #{M_TD_DESC}, sysdate, #{userkey})
	</insert>
	
	<select id="todoCount" parameterType="int" resultType="int">
		select count(*) from mytodo
		where userkey=#{userkey}
	</select>
	
	<delete id="deleteTodo" parameterType="int">
		delete from mytodo
		where m_td_key = #{m_td_key}
	</delete>
	
	<select id="todoAllList" resultType="todoDTO" parameterType="int">
		 SELECT * from mytodo
		 where userkey = #{userkey}
		 order by m_td_key
	</select>
	
</mapper>